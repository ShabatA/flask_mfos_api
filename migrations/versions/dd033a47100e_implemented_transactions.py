"""implemented transactions

Revision ID: dd033a47100e
Revises: 8285f6f440af
Create Date: 2024-07-24 23:06:41.899668

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "dd033a47100e"
down_revision = "8285f6f440af"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "fund_transfers",
        sa.Column("transferID", sa.Integer(), nullable=False),
        sa.Column("from_fund", sa.Integer(), nullable=True),
        sa.Column("to_fund", sa.Integer(), nullable=True),
        sa.Column("transferAmount", sa.Float(), nullable=False),
        sa.Column("createdBy", sa.Integer(), nullable=False),
        sa.Column("createdAt", sa.DateTime(), nullable=False),
        sa.Column("currencyID", sa.Integer(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column(
            "transferType",
            sa.Enum("EFT", "CASH", "CHECK", name="transfertype"),
            nullable=True,
        ),
        sa.Column("closed", sa.Boolean(), nullable=True),
        sa.Column("status", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["createdBy"], ["users.userID"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["currencyID"], ["currencies.currencyID"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["from_fund"], ["financial_fund.fundID"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["to_fund"], ["financial_fund.fundID"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("transferID"),
    )
    op.create_table(
        "case_fund_release_approval",
        sa.Column("approvalID", sa.Integer(), nullable=False),
        sa.Column("requestID", sa.Integer(), nullable=False),
        sa.Column("accountID", sa.Integer(), nullable=False),
        sa.Column("fundID", sa.Integer(), nullable=False),
        sa.Column("approvedBy", sa.Integer(), nullable=False),
        sa.Column("approvedAmount", sa.Float(), nullable=False),
        sa.Column("approvedAt", sa.DateTime(), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("closed", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["accountID"], ["region_account.accountID"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["approvedBy"], ["users.userID"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["fundID"], ["financial_fund.fundID"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["requestID"], ["case_fund_release_requests.requestID"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("approvalID"),
    )
    op.create_table(
        "project_fund_release_approval",
        sa.Column("approvalID", sa.Integer(), nullable=False),
        sa.Column("requestID", sa.Integer(), nullable=False),
        sa.Column("accountID", sa.Integer(), nullable=False),
        sa.Column("fundID", sa.Integer(), nullable=False),
        sa.Column("approvedBy", sa.Integer(), nullable=False),
        sa.Column("approvedAmount", sa.Float(), nullable=False),
        sa.Column("approvedAt", sa.DateTime(), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("closed", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["accountID"], ["region_account.accountID"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["approvedBy"], ["users.userID"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["fundID"], ["financial_fund.fundID"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["requestID"],
            ["project_fund_release_requests.requestID"],
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("approvalID"),
    )
    op.drop_table("fund_transfer_requests")
    with op.batch_alter_table("case_fund_release_requests", schema=None) as batch_op:
        batch_op.add_column(sa.Column("paymentMethod", sa.String(), nullable=True))
        batch_op.add_column(sa.Column("notes", sa.Text(), nullable=True))
        batch_op.drop_constraint(
            "case_fund_release_requests_caseID_fkey", type_="foreignkey"
        )
        batch_op.drop_constraint(
            "case_fund_release_requests_requestedBy_fkey", type_="foreignkey"
        )
        batch_op.create_foreign_key(
            None, "cases_data", ["caseID"], ["caseID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "users", ["requestedBy"], ["userID"], ondelete="CASCADE"
        )

    with op.batch_alter_table("case_funds", schema=None) as batch_op:
        batch_op.drop_constraint("case_funds_accountID_fkey", type_="foreignkey")
        batch_op.drop_constraint("case_funds_caseID_fkey", type_="foreignkey")
        batch_op.create_foreign_key(
            None, "cases_data", ["caseID"], ["caseID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "region_account", ["accountID"], ["accountID"], ondelete="CASCADE"
        )

    with op.batch_alter_table("category_funds", schema=None) as batch_op:
        batch_op.drop_constraint("category_funds_accountID_fkey", type_="foreignkey")
        batch_op.create_foreign_key(
            None, "region_account", ["accountID"], ["accountID"], ondelete="CASCADE"
        )

    with op.batch_alter_table("donations", schema=None) as batch_op:
        batch_op.drop_constraint("donations_donorID_fkey", type_="foreignkey")
        batch_op.drop_constraint("donations_subFundID_fkey", type_="foreignkey")
        batch_op.drop_constraint("donations_fundID_fkey", type_="foreignkey")
        batch_op.drop_constraint("donations_projectID_fkey", type_="foreignkey")
        batch_op.drop_constraint("donations_caseID_fkey", type_="foreignkey")
        batch_op.drop_constraint("donations_accountID_fkey", type_="foreignkey")
        batch_op.drop_constraint("donations_currencyID_fkey", type_="foreignkey")
        batch_op.create_foreign_key(
            None, "cases_data", ["caseID"], ["caseID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "region_account", ["accountID"], ["accountID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "donors", ["donorID"], ["donorID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "sub_funds", ["subFundID"], ["subFundID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "financial_fund", ["fundID"], ["fundID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "projects_data", ["projectID"], ["projectID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "currencies", ["currencyID"], ["currencyID"], ondelete="CASCADE"
        )

    with op.batch_alter_table("financial_fund", schema=None) as batch_op:
        batch_op.drop_constraint("financial_fund_currencyID_fkey", type_="foreignkey")
        batch_op.drop_constraint(
            "financial_fund_administrator_fkey", type_="foreignkey"
        )
        batch_op.create_foreign_key(
            None, "users", ["administrator"], ["userID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "currencies", ["currencyID"], ["currencyID"], ondelete="CASCADE"
        )

    with op.batch_alter_table(
        "financial_fund_currency_balances", schema=None
    ) as batch_op:
        batch_op.drop_constraint(
            "financial_fund_currency_balances_fundID_fkey", type_="foreignkey"
        )
        batch_op.drop_constraint(
            "financial_fund_currency_balances_currencyID_fkey", type_="foreignkey"
        )
        batch_op.create_foreign_key(
            None, "currencies", ["currencyID"], ["currencyID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "financial_fund", ["fundID"], ["fundID"], ondelete="CASCADE"
        )

    with op.batch_alter_table("payments", schema=None) as batch_op:

        batch_op.drop_constraint("payments_subFundID_fkey", type_="foreignkey")
        batch_op.drop_constraint("payments_currencyID_fkey", type_="foreignkey")
        batch_op.drop_constraint("payments_from_fund_fkey", type_="foreignkey")
        batch_op.create_foreign_key(
            None, "currencies", ["currencyID"], ["currencyID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "financial_fund", ["from_fund"], ["fundID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "sub_funds", ["subFundID"], ["subFundID"], ondelete="CASCADE"
        )

    with op.batch_alter_table("project_fund_release_requests", schema=None) as batch_op:
        batch_op.add_column(sa.Column("paymentMethod", sa.String(), nullable=True))
        batch_op.add_column(sa.Column("notes", sa.Text(), nullable=True))
        batch_op.drop_constraint(
            "project_fund_release_requests_projectID_fkey", type_="foreignkey"
        )
        batch_op.drop_constraint(
            "project_fund_release_requests_requestedBy_fkey", type_="foreignkey"
        )
        batch_op.create_foreign_key(
            None, "users", ["requestedBy"], ["userID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "projects_data", ["projectID"], ["projectID"], ondelete="CASCADE"
        )

    with op.batch_alter_table("project_funds", schema=None) as batch_op:
        batch_op.drop_constraint("project_funds_accountID_fkey", type_="foreignkey")
        batch_op.drop_constraint("project_funds_projectID_fkey", type_="foreignkey")
        batch_op.create_foreign_key(
            None, "projects_data", ["projectID"], ["projectID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "region_account", ["accountID"], ["accountID"], ondelete="CASCADE"
        )

    with op.batch_alter_table("region_account", schema=None) as batch_op:
        batch_op.drop_constraint("region_account_regionID_fkey", type_="foreignkey")
        batch_op.drop_constraint(
            "region_account_defaultCurrencyID_fkey", type_="foreignkey"
        )
        batch_op.create_foreign_key(
            None, "regions", ["regionID"], ["regionID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None,
            "currencies",
            ["defaultCurrencyID"],
            ["currencyID"],
            ondelete="CASCADE",
        )

    with op.batch_alter_table(
        "region_account_currency_balances", schema=None
    ) as batch_op:
        batch_op.drop_constraint(
            "region_account_currency_balances_accountID_fkey", type_="foreignkey"
        )
        batch_op.drop_constraint(
            "region_account_currency_balances_currencyID_fkey", type_="foreignkey"
        )
        batch_op.create_foreign_key(
            None, "currencies", ["currencyID"], ["currencyID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "region_account", ["accountID"], ["accountID"], ondelete="CASCADE"
        )

    with op.batch_alter_table("region_account_transactions", schema=None) as batch_op:
        batch_op.drop_constraint(
            "region_account_transactions_projectID_fkey", type_="foreignkey"
        )
        batch_op.drop_constraint(
            "region_account_transactions_currencyID_fkey", type_="foreignkey"
        )
        batch_op.drop_constraint(
            "region_account_transactions_accountID_fkey", type_="foreignkey"
        )
        batch_op.drop_constraint(
            "region_account_transactions_caseID_fkey", type_="foreignkey"
        )
        batch_op.create_foreign_key(
            None, "currencies", ["currencyID"], ["currencyID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "cases_data", ["caseID"], ["caseID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "region_account", ["accountID"], ["accountID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "projects_data", ["projectID"], ["projectID"], ondelete="CASCADE"
        )

    with op.batch_alter_table("representatives", schema=None) as batch_op:
        batch_op.drop_constraint("representatives_donorID_fkey", type_="foreignkey")
        batch_op.create_foreign_key(
            None, "donors", ["donorID"], ["donorID"], ondelete="CASCADE"
        )

    with op.batch_alter_table("sub_fund_currency_balances", schema=None) as batch_op:
        batch_op.drop_constraint(
            "sub_fund_currency_balances_subFundID_fkey", type_="foreignkey"
        )
        batch_op.drop_constraint(
            "sub_fund_currency_balances_currencyID_fkey", type_="foreignkey"
        )
        batch_op.create_foreign_key(
            None, "sub_funds", ["subFundID"], ["subFundID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "currencies", ["currencyID"], ["currencyID"], ondelete="CASCADE"
        )

    with op.batch_alter_table("sub_funds", schema=None) as batch_op:
        batch_op.drop_constraint("sub_funds_fundID_fkey", type_="foreignkey")
        batch_op.drop_constraint("sub_funds_currencyID_fkey", type_="foreignkey")
        batch_op.create_foreign_key(
            None, "currencies", ["currencyID"], ["currencyID"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "financial_fund", ["fundID"], ["fundID"], ondelete="CASCADE"
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("sub_funds", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "sub_funds_currencyID_fkey", "currencies", ["currencyID"], ["currencyID"]
        )
        batch_op.create_foreign_key(
            "sub_funds_fundID_fkey", "financial_fund", ["fundID"], ["fundID"]
        )

    with op.batch_alter_table("sub_fund_currency_balances", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "sub_fund_currency_balances_currencyID_fkey",
            "currencies",
            ["currencyID"],
            ["currencyID"],
        )
        batch_op.create_foreign_key(
            "sub_fund_currency_balances_subFundID_fkey",
            "sub_funds",
            ["subFundID"],
            ["subFundID"],
        )

    with op.batch_alter_table("representatives", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "representatives_donorID_fkey", "donors", ["donorID"], ["donorID"]
        )

    with op.batch_alter_table("region_account_transactions", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "region_account_transactions_caseID_fkey",
            "cases_data",
            ["caseID"],
            ["caseID"],
        )
        batch_op.create_foreign_key(
            "region_account_transactions_accountID_fkey",
            "region_account",
            ["accountID"],
            ["accountID"],
        )
        batch_op.create_foreign_key(
            "region_account_transactions_currencyID_fkey",
            "currencies",
            ["currencyID"],
            ["currencyID"],
        )
        batch_op.create_foreign_key(
            "region_account_transactions_projectID_fkey",
            "projects_data",
            ["projectID"],
            ["projectID"],
        )

    with op.batch_alter_table(
        "region_account_currency_balances", schema=None
    ) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "region_account_currency_balances_currencyID_fkey",
            "currencies",
            ["currencyID"],
            ["currencyID"],
        )
        batch_op.create_foreign_key(
            "region_account_currency_balances_accountID_fkey",
            "region_account",
            ["accountID"],
            ["accountID"],
        )

    with op.batch_alter_table("region_account", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "region_account_defaultCurrencyID_fkey",
            "currencies",
            ["defaultCurrencyID"],
            ["currencyID"],
        )
        batch_op.create_foreign_key(
            "region_account_regionID_fkey", "regions", ["regionID"], ["regionID"]
        )

    with op.batch_alter_table("project_funds", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "project_funds_projectID_fkey",
            "projects_data",
            ["projectID"],
            ["projectID"],
        )
        batch_op.create_foreign_key(
            "project_funds_accountID_fkey",
            "region_account",
            ["accountID"],
            ["accountID"],
        )

    with op.batch_alter_table("project_fund_release_requests", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "project_fund_release_requests_requestedBy_fkey",
            "users",
            ["requestedBy"],
            ["userID"],
        )
        batch_op.create_foreign_key(
            "project_fund_release_requests_projectID_fkey",
            "projects_data",
            ["projectID"],
            ["projectID"],
        )
        batch_op.drop_column("notes")
        batch_op.drop_column("paymentMethod")

    with op.batch_alter_table("payments", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "payments_from_fund_fkey", "financial_fund", ["from_fund"], ["fundID"]
        )
        batch_op.create_foreign_key(
            "payments_currencyID_fkey", "currencies", ["currencyID"], ["currencyID"]
        )
        batch_op.create_foreign_key(
            "payments_subFundID_fkey", "sub_funds", ["subFundID"], ["subFundID"]
        )
        batch_op.alter_column(
            "paymentMethod",
            existing_type=sa.Enum("EFT", "CASH", "CHECK", name="transfertype"),
            type_=postgresql.ENUM("EFT", "CASH", "CHECK", name="paymentmethod"),
            existing_nullable=True,
        )

    with op.batch_alter_table(
        "financial_fund_currency_balances", schema=None
    ) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "financial_fund_currency_balances_currencyID_fkey",
            "currencies",
            ["currencyID"],
            ["currencyID"],
        )
        batch_op.create_foreign_key(
            "financial_fund_currency_balances_fundID_fkey",
            "financial_fund",
            ["fundID"],
            ["fundID"],
        )

    with op.batch_alter_table("financial_fund", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "financial_fund_administrator_fkey", "users", ["administrator"], ["userID"]
        )
        batch_op.create_foreign_key(
            "financial_fund_currencyID_fkey",
            "currencies",
            ["currencyID"],
            ["currencyID"],
        )

    with op.batch_alter_table("donations", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "donations_currencyID_fkey", "currencies", ["currencyID"], ["currencyID"]
        )
        batch_op.create_foreign_key(
            "donations_accountID_fkey", "region_account", ["accountID"], ["accountID"]
        )
        batch_op.create_foreign_key(
            "donations_caseID_fkey", "cases_data", ["caseID"], ["caseID"]
        )
        batch_op.create_foreign_key(
            "donations_projectID_fkey", "projects_data", ["projectID"], ["projectID"]
        )
        batch_op.create_foreign_key(
            "donations_fundID_fkey", "financial_fund", ["fundID"], ["fundID"]
        )
        batch_op.create_foreign_key(
            "donations_subFundID_fkey", "sub_funds", ["subFundID"], ["subFundID"]
        )
        batch_op.create_foreign_key(
            "donations_donorID_fkey", "donors", ["donorID"], ["donorID"]
        )

    with op.batch_alter_table("category_funds", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "category_funds_accountID_fkey",
            "region_account",
            ["accountID"],
            ["accountID"],
        )

    with op.batch_alter_table("case_funds", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "case_funds_caseID_fkey", "cases_data", ["caseID"], ["caseID"]
        )
        batch_op.create_foreign_key(
            "case_funds_accountID_fkey", "region_account", ["accountID"], ["accountID"]
        )

    with op.batch_alter_table("case_fund_release_requests", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "case_fund_release_requests_requestedBy_fkey",
            "users",
            ["requestedBy"],
            ["userID"],
        )
        batch_op.create_foreign_key(
            "case_fund_release_requests_caseID_fkey",
            "cases_data",
            ["caseID"],
            ["caseID"],
        )
        batch_op.drop_column("notes")
        batch_op.drop_column("paymentMethod")

    op.create_table(
        "fund_transfer_requests",
        sa.Column(
            "requestID",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('\"fund_transfer_requests_requestID_seq\"'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("from_fund", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("to_fund", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "transferAmount",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("requestedBy", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "createdAt", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "stage",
            postgresql.ENUM("ASSESSMENT", "ONGOING", "APPROVED", name="transferstage"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "approvedAt", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "transferType",
            postgresql.ENUM("EFT", "CASH", "CHECK", name="paymentmethod"),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["from_fund"],
            ["financial_fund.fundID"],
            name="fund_transfer_requests_from_fund_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["requestedBy"],
            ["users.userID"],
            name="fund_transfer_requests_requestedBy_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["to_fund"],
            ["financial_fund.fundID"],
            name="fund_transfer_requests_to_fund_fkey",
        ),
        sa.PrimaryKeyConstraint("requestID", name="fund_transfer_requests_pkey"),
    )
    op.drop_table("project_fund_release_approval")
    op.drop_table("case_fund_release_approval")
    op.drop_table("fund_transfers")
    # ### end Alembic commands ###
