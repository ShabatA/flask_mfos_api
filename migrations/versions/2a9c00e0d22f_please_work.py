"""please work

Revision ID: 2a9c00e0d22f
Revises: f4b6b4c1590e
Create Date: 2024-01-10 22:25:31.789631

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2a9c00e0d22f'
down_revision = 'f4b6b4c1590e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('case_stage',
    sa.Column('stageID', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('stageID')
    )
    op.create_table('case_status_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('caseID', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['caseID'], ['cases.caseID'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('case_task',
    sa.Column('taskID', sa.Integer(), nullable=False),
    sa.Column('caseID', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('deadline', sa.Date(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('createdBy', sa.Integer(), nullable=False),
    sa.Column('attachedFiles', sa.String(), nullable=True),
    sa.Column('stageID', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('TODO', 'INPROGRESS', 'DONE', 'OVERDUE', name='casetaskstatus'), nullable=False),
    sa.Column('completionDate', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['caseID'], ['cases.caseID'], ),
    sa.ForeignKeyConstraint(['createdBy'], ['users.userID'], ),
    sa.ForeignKeyConstraint(['stageID'], ['case_stage.stageID'], ),
    sa.PrimaryKeyConstraint('taskID')
    )
    op.create_table('case_to_stage',
    sa.Column('caseID', sa.Integer(), nullable=False),
    sa.Column('stageID', sa.Integer(), nullable=False),
    sa.Column('started', sa.Boolean(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('completionDate', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['caseID'], ['cases.caseID'], ),
    sa.ForeignKeyConstraint(['stageID'], ['case_stage.stageID'], ),
    sa.PrimaryKeyConstraint('caseID', 'stageID')
    )
    op.create_table('c_task_assigned_to',
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['case_task.taskID'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.userID'], ),
    sa.PrimaryKeyConstraint('task_id', 'user_id')
    )
    op.create_table('c_task_cc',
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['case_task.taskID'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.userID'], ),
    sa.PrimaryKeyConstraint('task_id', 'user_id')
    )
    op.create_table('case_task_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userID', sa.Integer(), nullable=False),
    sa.Column('taskID', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['taskID'], ['case_task.taskID'], ),
    sa.ForeignKeyConstraint(['userID'], ['users.userID'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('cases', schema=None) as batch_op:
        batch_op.add_column(sa.Column('category', sa.Enum('A', 'B', 'C', 'D', name='casecategory'), nullable=True))
        batch_op.alter_column('budgetRequired',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               nullable=False)
        batch_op.alter_column('budgetAvailable',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               nullable=False)
        batch_op.drop_column('caseCategory')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('cases', schema=None) as batch_op:
        batch_op.add_column(sa.Column('caseCategory', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.alter_column('budgetAvailable',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               nullable=True)
        batch_op.alter_column('budgetRequired',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               nullable=True)
        batch_op.drop_column('category')

    op.drop_table('case_task_comments')
    op.drop_table('c_task_cc')
    op.drop_table('c_task_assigned_to')
    op.drop_table('case_to_stage')
    op.drop_table('case_task')
    op.drop_table('case_status_data')
    op.drop_table('case_stage')
    # ### end Alembic commands ###
