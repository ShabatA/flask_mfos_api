"""added notes to project assessment

Revision ID: c90679231c0c
Revises: b0edfc734f24
Create Date: 2024-01-26 20:07:08.116167

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "c90679231c0c"
down_revision = "b0edfc734f24"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("assessment_answers", schema=None) as batch_op:
        batch_op.add_column(sa.Column("notes", sa.String(), nullable=True))
        batch_op.alter_column("answerText", existing_type=sa.VARCHAR(), nullable=True)

    # with op.batch_alter_table('cases', schema=None) as batch_op:
    #     batch_op.alter_column('category',
    #            existing_type=postgresql.ENUM('A', 'B', 'C', 'D', name='cases_category'),
    #            type_=sa.Enum('A', 'B', 'C', 'D', name='casecategory'),
    #            existing_nullable=True)

    with op.batch_alter_table("projects", schema=None) as batch_op:
        batch_op.alter_column(
            "createdAt", existing_type=postgresql.TIMESTAMP(), nullable=False
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("projects", schema=None) as batch_op:
        batch_op.alter_column(
            "createdAt", existing_type=postgresql.TIMESTAMP(), nullable=True
        )

    with op.batch_alter_table("cases", schema=None) as batch_op:
        batch_op.alter_column(
            "category",
            existing_type=sa.Enum("A", "B", "C", "D", name="casecategory"),
            type_=postgresql.ENUM("A", "B", "C", "D", name="cases_category"),
            existing_nullable=True,
        )

    with op.batch_alter_table("assessment_answers", schema=None) as batch_op:
        batch_op.alter_column("answerText", existing_type=sa.VARCHAR(), nullable=True)
        batch_op.drop_column("notes")

    # ### end Alembic commands ###
