"""modifiedTasks

Revision ID: 4e5060d602a9
Revises: 63ada844dc93
Create Date: 2024-07-07 13:14:44.620875

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from datetime import datetime

# revision identifiers, used by Alembic.
revision = '4e5060d602a9'
down_revision = '63ada844dc93'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('case_task', schema=None) as batch_op:
        batch_op.add_column(sa.Column('creationDate', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('startDate', sa.Date(), nullable=True))

    with op.batch_alter_table('project_task', schema=None) as batch_op:
        batch_op.add_column(sa.Column('creationDate', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('startDate', sa.Date(), nullable=True))

    # Populate the creationDate column with the current timestamp for existing rows
    op.execute('UPDATE case_task SET "creationDate" = NOW() WHERE "creationDate" IS NULL')
    op.execute('UPDATE project_task SET "creationDate" = NOW() WHERE "creationDate" IS NULL')

    # Make the creationDate column non-nullable
    with op.batch_alter_table('case_task', schema=None) as batch_op:
        batch_op.alter_column('creationDate', nullable=False)

    with op.batch_alter_table('project_task', schema=None) as batch_op:
        batch_op.alter_column('creationDate', nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('project_task', schema=None) as batch_op:
        batch_op.drop_column('startDate')
        batch_op.drop_column('creationDate')

    with op.batch_alter_table('case_task', schema=None) as batch_op:
        batch_op.drop_column('startDate')
        batch_op.drop_column('creationDate')
    # ### end Alembic commands ###
