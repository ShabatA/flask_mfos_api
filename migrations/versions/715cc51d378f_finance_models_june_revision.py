"""finance models june revision

Revision ID: 715cc51d378f
Revises: cfed25d82162
Create Date: 2024-06-09 23:19:39.050491

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "715cc51d378f"
down_revision = "cfed25d82162"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    projectscopes = sa.Enum(
        "HEALTH",
        "SHELTER",
        "EDUCATION",
        "GENERAL",
        "SPONSORSHIP",
        "RELIEF",
        name="projectscopes",
    )
    projectscopes.create(op.get_bind(), checkfirst=True)
    # Create the 'donationtypes' enum type
    donationtypes = sa.Enum("PROJECT", "CASE", "GENERAL", name="donationtypes")
    donationtypes.create(op.get_bind())

    transfertype = sa.Enum("EFT", "CASH", "CHECK", name="paymentmethod")
    transfertype.create(op.get_bind())

    op.create_table(
        "currencies",
        sa.Column("currencyID", sa.Integer(), nullable=False),
        sa.Column("currencyCode", sa.String(length=3), nullable=False),
        sa.Column("currencyName", sa.String(length=50), nullable=False),
        sa.Column("exchangeRateToUSD", sa.Float(), nullable=False),
        sa.Column("lastUpdated", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("currencyID"),
        sa.UniqueConstraint("currencyCode"),
    )
    op.create_table(
        "reports",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("reportTag", sa.String(), nullable=False),
        sa.Column("createdBy", sa.String(), nullable=False),
        sa.Column("dateCreated", sa.DateTime(), nullable=False),
        sa.Column("pdfBytes", sa.LargeBinary(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "representatives",
        sa.Column("representativeID", sa.Integer(), nullable=False),
        sa.Column("donorID", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("jobPosition", sa.String(length=255), nullable=True),
        sa.Column("email", sa.String(length=255), nullable=True),
        sa.Column("phoneNumber", sa.String(length=50), nullable=True),
        sa.ForeignKeyConstraint(
            ["donorID"],
            ["donors.donorID"],
        ),
        sa.PrimaryKeyConstraint("representativeID"),
    )
    with op.batch_alter_table("representatives", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_representatives_donorID"), ["donorID"], unique=False
        )

    op.create_table(
        "region_account_currency_balances",
        sa.Column("balanceID", sa.Integer(), nullable=False),
        sa.Column("accountID", sa.Integer(), nullable=False),
        sa.Column("currencyID", sa.Integer(), nullable=False),
        sa.Column("totalFund", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("availableFund", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("usedFund", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.ForeignKeyConstraint(
            ["accountID"],
            ["region_account.accountID"],
        ),
        sa.ForeignKeyConstraint(
            ["currencyID"],
            ["currencies.currencyID"],
        ),
        sa.PrimaryKeyConstraint("balanceID"),
    )
    op.create_table(
        "financial_fund_currency_balances",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("fundID", sa.Integer(), nullable=False),
        sa.Column("currencyID", sa.Integer(), nullable=False),
        sa.Column("totalFund", sa.Float(), nullable=False),
        sa.Column("usedFund", sa.Float(), nullable=False),
        sa.Column("availableFund", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["currencyID"],
            ["currencies.currencyID"],
        ),
        sa.ForeignKeyConstraint(
            ["fundID"],
            ["financial_fund.fundID"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("fundID", "currencyID", name="unique_fund_currency"),
    )
    with op.batch_alter_table(
        "financial_fund_currency_balances", schema=None
    ) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_financial_fund_currency_balances_currencyID"),
            ["currencyID"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_financial_fund_currency_balances_fundID"),
            ["fundID"],
            unique=False,
        )

    op.create_table(
        "region_account_transactions",
        sa.Column("transactionID", sa.Integer(), nullable=False),
        sa.Column("accountID", sa.Integer(), nullable=False),
        sa.Column("currencyID", sa.Integer(), nullable=False),
        sa.Column("amount", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("transactionType", sa.String(length=10), nullable=False),
        sa.Column("transactionSubtype", sa.String(length=50), nullable=True),
        sa.Column("projectID", sa.Integer(), nullable=True),
        sa.Column("caseID", sa.Integer(), nullable=True),
        sa.Column("paymentNumber", sa.Integer(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["accountID"],
            ["region_account.accountID"],
        ),
        sa.ForeignKeyConstraint(
            ["caseID"],
            ["cases_data.caseID"],
        ),
        sa.ForeignKeyConstraint(
            ["currencyID"],
            ["currencies.currencyID"],
        ),
        sa.ForeignKeyConstraint(
            ["projectID"],
            ["projects_data.projectID"],
        ),
        sa.PrimaryKeyConstraint("transactionID"),
    )
    op.create_table(
        "sub_funds",
        sa.Column("subFundID", sa.Integer(), nullable=False),
        sa.Column("fundID", sa.Integer(), nullable=False),
        sa.Column("subFundName", sa.String(length=255), nullable=False),
        sa.Column("accountType", sa.String(length=50), nullable=True),
        sa.Column("totalFund", sa.Float(), nullable=False),
        sa.Column("usedFund", sa.Float(), nullable=False),
        sa.Column("availableFund", sa.Float(), nullable=False),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("createdAt", sa.DateTime(), nullable=False),
        sa.Column("currencyID", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["currencyID"],
            ["currencies.currencyID"],
        ),
        sa.ForeignKeyConstraint(
            ["fundID"],
            ["financial_fund.fundID"],
        ),
        sa.PrimaryKeyConstraint("subFundID"),
    )
    with op.batch_alter_table("sub_funds", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_sub_funds_currencyID"), ["currencyID"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_sub_funds_fundID"), ["fundID"], unique=False
        )

    op.create_table(
        "sub_fund_currency_balances",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("subFundID", sa.Integer(), nullable=False),
        sa.Column("currencyID", sa.Integer(), nullable=False),
        sa.Column("totalFund", sa.Float(), nullable=False),
        sa.Column("usedFund", sa.Float(), nullable=False),
        sa.Column("availableFund", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["currencyID"],
            ["currencies.currencyID"],
        ),
        sa.ForeignKeyConstraint(
            ["subFundID"],
            ["sub_funds.subFundID"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("subFundID", "currencyID", name="unique_subfund_currency"),
    )
    with op.batch_alter_table("sub_fund_currency_balances", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_sub_fund_currency_balances_currencyID"),
            ["currencyID"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_sub_fund_currency_balances_subFundID"),
            ["subFundID"],
            unique=False,
        )

    with op.batch_alter_table("case_fund_release_requests", schema=None) as batch_op:
        batch_op.add_column(sa.Column("paymentCount", sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column("approvedAmount", sa.Float(), nullable=False))
        batch_op.add_column(sa.Column("bulkName", sa.String(), nullable=True))

    with op.batch_alter_table("donations", schema=None) as batch_op:
        batch_op.add_column(sa.Column("currencyID", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("subFundID", sa.Integer(), nullable=True))
        batch_op.add_column(
            sa.Column(
                "projectScope",
                sa.Enum(
                    "HEALTH",
                    "SHELTER",
                    "EDUCATION",
                    "GENERAL",
                    "SPONSORSHIP",
                    "RELIEF",
                    name="projectscopes",
                ),
                nullable=True,
            )
        )
        batch_op.add_column(sa.Column("allocationTags", sa.String(), nullable=True))
        batch_op.alter_column(
            "donationType",
            existing_type=sa.VARCHAR(),
            type_=sa.Enum("PROJECT", "CASE", "GENERAL", name="donationtypes"),
            existing_nullable=True,
            postgresql_using='"donationType"::donationtypes',
        )
        batch_op.create_foreign_key(None, "sub_funds", ["subFundID"], ["subFundID"])
        batch_op.create_foreign_key(None, "currencies", ["currencyID"], ["currencyID"])
        batch_op.drop_column("currency")
        batch_op.drop_column("field")

    with op.batch_alter_table("donors", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("donorName", sa.String(length=255), nullable=False)
        )
        batch_op.add_column(
            sa.Column("placeOfResidence", sa.String(length=255), nullable=True)
        )
        batch_op.add_column(sa.Column("startOfRelationship", sa.Date(), nullable=False))
        batch_op.add_column(sa.Column("notes", sa.Text(), nullable=True))
        batch_op.alter_column("donorType", existing_type=sa.VARCHAR(), nullable=False)
        batch_op.drop_column("name")
        batch_op.drop_column("country")

    with op.batch_alter_table("financial_fund", schema=None) as batch_op:
        batch_op.add_column(sa.Column("administrator", sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column("availableFund", sa.Float(), nullable=True))
        batch_op.add_column(sa.Column("currencyID", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("lastUpdate", sa.DateTime(), nullable=False))
        batch_op.create_index(
            batch_op.f("ix_financial_fund_currencyID"), ["currencyID"], unique=False
        )
        batch_op.create_foreign_key(None, "currencies", ["currencyID"], ["currencyID"])
        batch_op.create_foreign_key(None, "users", ["administrator"], ["userID"])
        batch_op.drop_column("currency")

    with op.batch_alter_table("fund_transfer_requests", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "transferType",
                sa.Enum("EFT", "CASH", "CHECK", name="paymentmethod"),
                nullable=True,
            )
        )
        batch_op.drop_column("attachedFiles")
        batch_op.drop_column("currencyFrom")
        batch_op.drop_column("currencyTo")
        batch_op.drop_column("exchangeRate")

    with op.batch_alter_table("payments", schema=None) as batch_op:
        batch_op.add_column(sa.Column("currencyID", sa.Integer(), nullable=True))
        batch_op.add_column(
            sa.Column(
                "projectScope",
                sa.Enum(
                    "HEALTH",
                    "SHELTER",
                    "EDUCATION",
                    "GENERAL",
                    "SPONSORSHIP",
                    "RELIEF",
                    name="projectscopes",
                ),
                nullable=True,
            )
        )
        batch_op.alter_column(
            "paymentMethod",
            existing_type=sa.VARCHAR(),
            type_=sa.Enum("EFT", "CASH", "CHECK", name="paymentmethod"),
            existing_nullable=True,
            postgresql_using='"paymentMethod"::paymentmethod',
        )
        batch_op.create_foreign_key(None, "currencies", ["currencyID"], ["currencyID"])
        batch_op.drop_column("currency")
        batch_op.drop_column("supportingFiles")
        batch_op.drop_column("exchangeRate")

    with op.batch_alter_table("project_fund_release_requests", schema=None) as batch_op:
        batch_op.add_column(sa.Column("paymentCount", sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column("approvedAmount", sa.Float(), nullable=False))
        batch_op.add_column(sa.Column("bulkName", sa.String(), nullable=True))

    with op.batch_alter_table("region_account", schema=None) as batch_op:
        batch_op.add_column(sa.Column("defaultCurrencyID", sa.Integer(), nullable=True))
        batch_op.add_column(
            sa.Column(
                "availableFund", sa.Numeric(precision=10, scale=2), nullable=False
            )
        )
        batch_op.add_column(sa.Column("lastUpdate", sa.DateTime(), nullable=False))
        batch_op.alter_column(
            "totalFund",
            existing_type=sa.DOUBLE_PRECISION(precision=53),
            type_=sa.Numeric(precision=10, scale=2),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "usedFund",
            existing_type=sa.DOUBLE_PRECISION(precision=53),
            type_=sa.Numeric(precision=10, scale=2),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "health_funds",
            existing_type=sa.DOUBLE_PRECISION(precision=53),
            type_=sa.Numeric(precision=10, scale=2),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "education_funds",
            existing_type=sa.DOUBLE_PRECISION(precision=53),
            type_=sa.Numeric(precision=10, scale=2),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "general_funds",
            existing_type=sa.DOUBLE_PRECISION(precision=53),
            type_=sa.Numeric(precision=10, scale=2),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "shelter_funds",
            existing_type=sa.DOUBLE_PRECISION(precision=53),
            type_=sa.Numeric(precision=10, scale=2),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "sponsorship_funds",
            existing_type=sa.DOUBLE_PRECISION(precision=53),
            type_=sa.Numeric(precision=10, scale=2),
            existing_nullable=True,
        )
        batch_op.create_foreign_key(
            None, "currencies", ["defaultCurrencyID"], ["currencyID"]
        )
        batch_op.drop_column("currency")
        batch_op.drop_column("accountType")
        batch_op.drop_column("lastTransation")
        batch_op.drop_column("notes")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("region_account", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("notes", sa.TEXT(), autoincrement=False, nullable=True)
        )
        batch_op.add_column(
            sa.Column("lastTransation", sa.DATE(), autoincrement=False, nullable=True)
        )
        batch_op.add_column(
            sa.Column("accountType", sa.VARCHAR(), autoincrement=False, nullable=True)
        )
        batch_op.add_column(
            sa.Column("currency", sa.VARCHAR(), autoincrement=False, nullable=True)
        )
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.alter_column(
            "sponsorship_funds",
            existing_type=sa.Numeric(precision=10, scale=2),
            type_=sa.DOUBLE_PRECISION(precision=53),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "shelter_funds",
            existing_type=sa.Numeric(precision=10, scale=2),
            type_=sa.DOUBLE_PRECISION(precision=53),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "general_funds",
            existing_type=sa.Numeric(precision=10, scale=2),
            type_=sa.DOUBLE_PRECISION(precision=53),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "education_funds",
            existing_type=sa.Numeric(precision=10, scale=2),
            type_=sa.DOUBLE_PRECISION(precision=53),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "health_funds",
            existing_type=sa.Numeric(precision=10, scale=2),
            type_=sa.DOUBLE_PRECISION(precision=53),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "usedFund",
            existing_type=sa.Numeric(precision=10, scale=2),
            type_=sa.DOUBLE_PRECISION(precision=53),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "totalFund",
            existing_type=sa.Numeric(precision=10, scale=2),
            type_=sa.DOUBLE_PRECISION(precision=53),
            existing_nullable=False,
        )
        batch_op.drop_column("lastUpdate")
        batch_op.drop_column("availableFund")
        batch_op.drop_column("defaultCurrencyID")

    with op.batch_alter_table("project_fund_release_requests", schema=None) as batch_op:
        batch_op.drop_column("bulkName")
        batch_op.drop_column("approvedAmount")
        batch_op.drop_column("paymentCount")

    with op.batch_alter_table("payments", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "exchangeRate",
                sa.DOUBLE_PRECISION(precision=53),
                autoincrement=False,
                nullable=True,
            )
        )
        batch_op.add_column(
            sa.Column(
                "supportingFiles", sa.VARCHAR(), autoincrement=False, nullable=True
            )
        )
        batch_op.add_column(
            sa.Column("currency", sa.VARCHAR(), autoincrement=False, nullable=True)
        )
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.alter_column(
            "paymentMethod",
            existing_type=sa.Enum("EFT", "CASH", "CHECK", name="transfertype"),
            type_=sa.VARCHAR(),
            existing_nullable=True,
        )
        batch_op.drop_column("projectScope")
        batch_op.drop_column("currencyID")

    with op.batch_alter_table("fund_transfer_requests", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "exchangeRate",
                sa.DOUBLE_PRECISION(precision=53),
                autoincrement=False,
                nullable=True,
            )
        )
        batch_op.add_column(
            sa.Column("currencyTo", sa.VARCHAR(), autoincrement=False, nullable=True)
        )
        batch_op.add_column(
            sa.Column("currencyFrom", sa.VARCHAR(), autoincrement=False, nullable=True)
        )
        batch_op.add_column(
            sa.Column("attachedFiles", sa.VARCHAR(), autoincrement=False, nullable=True)
        )
        batch_op.drop_column("transferType")

    with op.batch_alter_table("financial_fund", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("currency", sa.VARCHAR(), autoincrement=False, nullable=True)
        )
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_index(batch_op.f("ix_financial_fund_currencyID"))
        batch_op.drop_column("lastUpdate")
        batch_op.drop_column("currencyID")
        batch_op.drop_column("availableFund")
        batch_op.drop_column("administrator")

    with op.batch_alter_table("donors", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("country", sa.VARCHAR(), autoincrement=False, nullable=True)
        )
        batch_op.add_column(
            sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False)
        )
        batch_op.alter_column("donorType", existing_type=sa.VARCHAR(), nullable=True)
        batch_op.drop_column("notes")
        batch_op.drop_column("startOfRelationship")
        batch_op.drop_column("placeOfResidence")
        batch_op.drop_column("donorName")

    with op.batch_alter_table("donations", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("field", sa.VARCHAR(), autoincrement=False, nullable=True)
        )
        batch_op.add_column(
            sa.Column("currency", sa.VARCHAR(), autoincrement=False, nullable=True)
        )
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.alter_column(
            "donationType",
            existing_type=sa.Enum("PROJECT", "CASE", "GENERAL", name="donationtypes"),
            type_=sa.VARCHAR(),
            existing_nullable=True,
        )
        batch_op.drop_column("allocationTags")
        batch_op.drop_column("projectScope")
        batch_op.drop_column("subFundID")
        batch_op.drop_column("currencyID")

    with op.batch_alter_table("case_fund_release_requests", schema=None) as batch_op:
        batch_op.drop_column("bulkName")
        batch_op.drop_column("approvedAmount")
        batch_op.drop_column("paymentCount")

    with op.batch_alter_table("sub_fund_currency_balances", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_sub_fund_currency_balances_subFundID"))
        batch_op.drop_index(batch_op.f("ix_sub_fund_currency_balances_currencyID"))

    op.drop_table("sub_fund_currency_balances")
    with op.batch_alter_table("sub_funds", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_sub_funds_fundID"))
        batch_op.drop_index(batch_op.f("ix_sub_funds_currencyID"))

    op.drop_table("sub_funds")
    op.drop_table("region_account_transactions")
    with op.batch_alter_table(
        "financial_fund_currency_balances", schema=None
    ) as batch_op:
        batch_op.drop_index(batch_op.f("ix_financial_fund_currency_balances_fundID"))
        batch_op.drop_index(
            batch_op.f("ix_financial_fund_currency_balances_currencyID")
        )

    op.drop_table("financial_fund_currency_balances")
    op.drop_table("region_account_currency_balances")
    with op.batch_alter_table("representatives", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_representatives_donorID"))

    op.drop_table("representatives")
    op.drop_table("reports")
    op.drop_table("currencies")
    # ### end Alembic commands ###
