"""Initial migration

Revision ID: eff733b324aa
Revises: 
Create Date: 2024-01-06 12:54:56.048909

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "eff733b324aa"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "cquestions",
        sa.Column("questionID", sa.Integer(), nullable=False),
        sa.Column("questionText", sa.String(), nullable=False),
        sa.Column("questionType", sa.String(), nullable=False),
        sa.Column("points", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("questionID"),
    )
    op.create_table(
        "stage",
        sa.Column("stageID", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("stageID"),
    )
    op.create_table(
        "cquestion_choices",
        sa.Column("choiceID", sa.Integer(), nullable=False),
        sa.Column("questionID", sa.Integer(), nullable=False),
        sa.Column("choiceText", sa.String(), nullable=False),
        sa.Column("points", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["questionID"],
            ["cquestions.questionID"],
        ),
        sa.PrimaryKeyConstraint("choiceID"),
    )
    op.create_table(
        "projects",
        sa.Column("projectID", sa.Integer(), nullable=False),
        sa.Column("projectName", sa.String(), nullable=False),
        sa.Column("regionID", sa.Integer(), nullable=False),
        sa.Column("budgetRequired", sa.Float(), nullable=False),
        sa.Column("budgetAvailable", sa.Float(), nullable=False),
        sa.Column(
            "projectStatus",
            sa.Enum("PENDING", "APPROVED", "REJECTED", name="projectstatus"),
            nullable=False,
        ),
        sa.Column("projectScope", sa.String(), nullable=True),
        sa.Column(
            "category",
            sa.Enum("A", "B", "C", "D", name="projectcategory"),
            nullable=True,
        ),
        sa.Column("userID", sa.Integer(), nullable=True),
        sa.Column("startDate", sa.Date(), nullable=True),
        sa.Column("dueDate", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["regionID"],
            ["regions.regionID"],
        ),
        sa.ForeignKeyConstraint(
            ["userID"],
            ["users.userID"],
        ),
        sa.PrimaryKeyConstraint("projectID"),
    )
    op.create_table(
        "answers",
        sa.Column("answerID", sa.Integer(), nullable=False),
        sa.Column("projectID", sa.Integer(), nullable=False),
        sa.Column("questionID", sa.Integer(), nullable=False),
        sa.Column("answerText", sa.String(), nullable=True),
        sa.Column("choiceID", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["choiceID"],
            ["question_choices.choiceID"],
        ),
        sa.ForeignKeyConstraint(
            ["projectID"],
            ["projects.projectID"],
        ),
        sa.ForeignKeyConstraint(
            ["questionID"],
            ["questions.questionID"],
        ),
        sa.PrimaryKeyConstraint("answerID"),
    )
    op.create_table(
        "canswers",
        sa.Column("answerID", sa.Integer(), nullable=False),
        sa.Column("caseID", sa.Integer(), nullable=False),
        sa.Column("questionID", sa.Integer(), nullable=False),
        sa.Column("answerText", sa.String(), nullable=True),
        sa.Column("choiceID", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["caseID"],
            ["cases.caseID"],
        ),
        sa.ForeignKeyConstraint(
            ["choiceID"],
            ["cquestion_choices.choiceID"],
        ),
        sa.ForeignKeyConstraint(
            ["questionID"],
            ["cquestions.questionID"],
        ),
        sa.PrimaryKeyConstraint("answerID"),
    )
    op.create_table(
        "case_users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("caseID", sa.Integer(), nullable=False),
        sa.Column("userID", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["caseID"],
            ["cases.caseID"],
        ),
        sa.ForeignKeyConstraint(
            ["userID"],
            ["users.userID"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "project_stage",
        sa.Column("projectID", sa.Integer(), nullable=False),
        sa.Column("stageID", sa.Integer(), nullable=False),
        sa.Column("started", sa.Boolean(), nullable=True),
        sa.Column("completed", sa.Boolean(), nullable=True),
        sa.Column("completionDate", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["projectID"],
            ["projects.projectID"],
        ),
        sa.ForeignKeyConstraint(
            ["stageID"],
            ["stage.stageID"],
        ),
        sa.PrimaryKeyConstraint("projectID", "stageID"),
    )
    op.create_table(
        "project_status_data",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("projectID", sa.Integer(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("data", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.ForeignKeyConstraint(
            ["projectID"],
            ["projects.projectID"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "project_task",
        sa.Column("taskID", sa.Integer(), nullable=False),
        sa.Column("projectID", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("deadline", sa.Date(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("createdBy", sa.Integer(), nullable=False),
        sa.Column("attachedFiles", sa.String(), nullable=True),
        sa.Column("stageID", sa.Integer(), nullable=False),
        sa.Column("completed", sa.Boolean(), nullable=True),
        sa.Column("completionDate", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["createdBy"],
            ["users.userID"],
        ),
        sa.ForeignKeyConstraint(
            ["projectID"],
            ["projects.projectID"],
        ),
        sa.ForeignKeyConstraint(
            ["stageID"],
            ["stage.stageID"],
        ),
        sa.PrimaryKeyConstraint("taskID"),
    )
    op.create_table(
        "project_user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("projectID", sa.Integer(), nullable=False),
        sa.Column("userID", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["projectID"],
            ["projects.projectID"],
        ),
        sa.ForeignKeyConstraint(
            ["userID"],
            ["users.userID"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "task_assigned_to",
        sa.Column("task_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["project_task.taskID"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.userID"],
        ),
    )
    op.create_table(
        "task_cc",
        sa.Column("task_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["project_task.taskID"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.userID"],
        ),
    )
    with op.batch_alter_table("cases", schema=None) as batch_op:
        batch_op.add_column(sa.Column("serviceRequired", sa.String(), nullable=True))
        batch_op.add_column(sa.Column("startDate", sa.Date(), nullable=True))
        batch_op.add_column(sa.Column("dueDate", sa.Date(), nullable=True))
        batch_op.alter_column("caseCategory", existing_type=sa.VARCHAR(), nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("cases", schema=None) as batch_op:
        batch_op.alter_column(
            "caseCategory", existing_type=sa.VARCHAR(), nullable=False
        )
        batch_op.drop_column("dueDate")
        batch_op.drop_column("startDate")
        batch_op.drop_column("serviceRequired")

    op.drop_table("task_cc")
    op.drop_table("task_assigned_to")
    op.drop_table("project_user")
    op.drop_table("project_task")
    op.drop_table("project_status_data")
    op.drop_table("project_stage")
    op.drop_table("case_users")
    op.drop_table("canswers")
    op.drop_table("answers")
    op.drop_table("projects")
    op.drop_table("cquestion_choices")
    op.drop_table("stage")
    op.drop_table("cquestions")
    # ### end Alembic commands ###
